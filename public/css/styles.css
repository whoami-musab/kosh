/*! tailwindcss v4.1.2 | MIT License | https://tailwindcss.com */
@layer properties;
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}
.absolute {
  position: absolute;
}
.relative {
  position: relative;
}
.-top-10 {
  top: calc(var(--spacing) * -10);
}
.top-0 {
  top: calc(var(--spacing) * 0);
}
.top-\[0\%\] {
  top: 0%;
}
.top-\[50\%\] {
  top: 50%;
}
.right-5 {
  right: calc(var(--spacing) * 5);
}
.right-\[1\%\] {
  right: 1%;
}
.bottom-0 {
  bottom: calc(var(--spacing) * 0);
}
.left-0 {
  left: calc(var(--spacing) * 0);
}
.left-\[5\%\] {
  left: 5%;
}
.left-\[10\%\] {
  left: 10%;
}
.left-\[20\%\] {
  left: 20%;
}
.left-\[30\%\] {
  left: 30%;
}
.left-\[40\%\] {
  left: 40%;
}
.left-\[50\%\] {
  left: 50%;
}
.left-\[60\%\] {
  left: 60%;
}
.left-\[70\%\] {
  left: 70%;
}
.left-\[80\%\] {
  left: 80%;
}
.left-\[90\%\] {
  left: 90%;
}
.container {
  width: 100%;
  @media (width >= 40rem) {
    max-width: 40rem;
  }
  @media (width >= 48rem) {
    max-width: 48rem;
  }
  @media (width >= 64rem) {
    max-width: 64rem;
  }
  @media (width >= 80rem) {
    max-width: 80rem;
  }
  @media (width >= 96rem) {
    max-width: 96rem;
  }
}
.mx-auto {
  margin-inline: auto;
}
.my-5 {
  margin-block: calc(var(--spacing) * 5);
}
.mt-2 {
  margin-top: calc(var(--spacing) * 2);
}
.mt-4 {
  margin-top: calc(var(--spacing) * 4);
}
.mt-14 {
  margin-top: calc(var(--spacing) * 14);
}
.mt-\[60\%\] {
  margin-top: 60%;
}
.mb-5 {
  margin-bottom: calc(var(--spacing) * 5);
}
.mb-10 {
  margin-bottom: calc(var(--spacing) * 10);
}
.contents {
  display: contents;
}
.flex {
  display: flex;
}
.hidden {
  display: none;
}
.h-0 {
  height: calc(var(--spacing) * 0);
}
.h-5 {
  height: calc(var(--spacing) * 5);
}
.h-10 {
  height: calc(var(--spacing) * 10);
}
.h-\[4\.2rem\] {
  height: 4.2rem;
}
.h-\[5rem\] {
  height: 5rem;
}
.h-\[15rem\] {
  height: 15rem;
}
.h-\[720px\] {
  height: 720px;
}
.h-full {
  height: 100%;
}
.min-h-screen {
  min-height: 100vh;
}
.w-0 {
  width: calc(var(--spacing) * 0);
}
.w-5 {
  width: calc(var(--spacing) * 5);
}
.w-\[5rem\] {
  width: 5rem;
}
.w-\[15rem\] {
  width: 15rem;
}
.w-\[100\%\] {
  width: 100%;
}
.w-\[235px\] {
  width: 235px;
}
.w-full {
  width: 100%;
}
.w-sm {
  width: var(--container-sm);
}
.shrink {
  flex-shrink: 1;
}
.grow {
  flex-grow: 1;
}
.-translate-x-\[50\%\] {
  --tw-translate-x: calc(50% * -1);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.-translate-y-\[50\%\] {
  --tw-translate-y: calc(50% * -1);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.rotate-90 {
  rotate: 90deg;
}
.rotate-180 {
  rotate: 180deg;
}
.rotate-270 {
  rotate: 270deg;
}
.transform {
  transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
}
.animate-spin {
  animation: var(--animate-spin);
}
.cursor-pointer {
  cursor: pointer;
}
.flex-col {
  flex-direction: column;
}
.flex-wrap {
  flex-wrap: wrap;
}
.items-center {
  align-items: center;
}
.items-start {
  align-items: flex-start;
}
.justify-around {
  justify-content: space-around;
}
.justify-between {
  justify-content: space-between;
}
.justify-center {
  justify-content: center;
}
.gap-2 {
  gap: calc(var(--spacing) * 2);
}
.gap-3 {
  gap: calc(var(--spacing) * 3);
}
.gap-5 {
  gap: calc(var(--spacing) * 5);
}
.gap-6 {
  gap: calc(var(--spacing) * 6);
}
.gap-9 {
  gap: calc(var(--spacing) * 9);
}
.gap-10 {
  gap: calc(var(--spacing) * 10);
}
.gap-15 {
  gap: calc(var(--spacing) * 15);
}
.gap-20 {
  gap: calc(var(--spacing) * 20);
}
.self-center {
  align-self: center;
}
.overflow-hidden {
  overflow: hidden;
}
.overflow-x-hidden {
  overflow-x: hidden;
}
.overflow-y-scroll {
  overflow-y: scroll;
}
.rounded {
  border-radius: 0.25rem;
}
.rounded-full {
  border-radius: calc(infinity * 1px);
}
.border {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.border-2 {
  border-style: var(--tw-border-style);
  border-width: 2px;
}
.border-t-\[2\.5rem\] {
  border-top-style: var(--tw-border-style);
  border-top-width: 2.5rem;
}
.border-r-\[1\.5rem\] {
  border-right-style: var(--tw-border-style);
  border-right-width: 1.5rem;
}
.border-b-\[2\.5rem\] {
  border-bottom-style: var(--tw-border-style);
  border-bottom-width: 2.5rem;
}
.border-l-\[1\.5rem\] {
  border-left-style: var(--tw-border-style);
  border-left-width: 1.5rem;
}
.border-none {
  --tw-border-style: none;
  border-style: none;
}
.border-transparent {
  border-color: transparent;
}
.border-t-gray-300 {
  border-top-color: var(--color-gray-300);
}
.border-t-gray-600 {
  border-top-color: var(--color-gray-600);
}
.border-r-gray-600 {
  border-right-color: var(--color-gray-600);
}
.border-b-gray-300 {
  border-bottom-color: var(--color-gray-300);
}
.border-b-gray-600 {
  border-bottom-color: var(--color-gray-600);
}
.border-l-gray-600 {
  border-left-color: var(--color-gray-600);
}
.bg-gray-600 {
  background-color: var(--color-gray-600);
}
.bg-gray-700 {
  background-color: var(--color-gray-700);
}
.bg-gray-800 {
  background-color: var(--color-gray-800);
}
.bg-gray-900 {
  background-color: var(--color-gray-900);
}
.bg-gray-950\/80 {
  background-color: color-mix(in srgb, oklch(13% 0.028 261.692) 80%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--color-gray-950) 80%, transparent);
  }
}
.bg-violet-500 {
  background-color: var(--color-violet-500);
}
.bg-white {
  background-color: var(--color-white);
}
.object-cover {
  -o-object-fit: cover;
     object-fit: cover;
}
.p-2 {
  padding: calc(var(--spacing) * 2);
}
.p-3 {
  padding: calc(var(--spacing) * 3);
}
.p-4 {
  padding: calc(var(--spacing) * 4);
}
.p-5 {
  padding: calc(var(--spacing) * 5);
}
.px-3 {
  padding-inline: calc(var(--spacing) * 3);
}
.px-5 {
  padding-inline: calc(var(--spacing) * 5);
}
.px-6 {
  padding-inline: calc(var(--spacing) * 6);
}
.py-2 {
  padding-block: calc(var(--spacing) * 2);
}
.py-4 {
  padding-block: calc(var(--spacing) * 4);
}
.py-5 {
  padding-block: calc(var(--spacing) * 5);
}
.pt-5 {
  padding-top: calc(var(--spacing) * 5);
}
.pb-5 {
  padding-bottom: calc(var(--spacing) * 5);
}
.text-center {
  text-align: center;
}
.text-2xl {
  font-size: var(--text-2xl);
  line-height: var(--tw-leading, var(--text-2xl--line-height));
}
.text-3xl {
  font-size: var(--text-3xl);
  line-height: var(--tw-leading, var(--text-3xl--line-height));
}
.text-4xl {
  font-size: var(--text-4xl);
  line-height: var(--tw-leading, var(--text-4xl--line-height));
}
.text-5xl {
  font-size: var(--text-5xl);
  line-height: var(--tw-leading, var(--text-5xl--line-height));
}
.text-6xl {
  font-size: var(--text-6xl);
  line-height: var(--tw-leading, var(--text-6xl--line-height));
}
.font-bold {
  --tw-font-weight: var(--font-weight-bold);
  font-weight: var(--font-weight-bold);
}
.font-extrabold {
  --tw-font-weight: var(--font-weight-extrabold);
  font-weight: var(--font-weight-extrabold);
}
.text-black {
  color: var(--color-black);
}
.text-gray-200 {
  color: var(--color-gray-200);
}
.text-gray-300 {
  color: var(--color-gray-300);
}
.text-red-500 {
  color: var(--color-red-500);
}
.text-white {
  color: var(--color-white);
}
.underline {
  text-decoration-line: underline;
}
.opacity-80 {
  opacity: 80%;
}
.shadow-2xl {
  --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, rgb(0 0 0 / 0.25));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.shadow-lg {
  --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.shadow-gray-950 {
  --tw-shadow-color: oklch(13% 0.028 261.692);
  @supports (color: color-mix(in lab, red, red)) {
    --tw-shadow-color: color-mix(in oklab, var(--color-gray-950) var(--tw-shadow-alpha), transparent);
  }
}
.transition {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.transition-all {
  transition-property: all;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.transition-colors {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.transition-transform {
  transition-property: transform, translate, scale, rotate;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.duration-300 {
  --tw-duration: 300ms;
  transition-duration: 300ms;
}
.outline-none {
  --tw-outline-style: none;
  outline-style: none;
}
.hover\:scale-110 {
  &:hover {
    @media (hover: hover) {
      --tw-scale-x: 110%;
      --tw-scale-y: 110%;
      --tw-scale-z: 110%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
}
.hover\:cursor-pointer {
  &:hover {
    @media (hover: hover) {
      cursor: pointer;
    }
  }
}
.hover\:rounded {
  &:hover {
    @media (hover: hover) {
      border-radius: 0.25rem;
    }
  }
}
.hover\:bg-gray-900 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-gray-900);
    }
  }
}
.hover\:bg-violet-600 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-violet-600);
    }
  }
}
.hover\:text-blue-500 {
  &:hover {
    @media (hover: hover) {
      color: var(--color-blue-500);
    }
  }
}
.hover\:text-gray-400 {
  &:hover {
    @media (hover: hover) {
      color: var(--color-gray-400);
    }
  }
}
.hover\:text-gray-950 {
  &:hover {
    @media (hover: hover) {
      color: var(--color-gray-950);
    }
  }
}
.hover\:text-orange-600 {
  &:hover {
    @media (hover: hover) {
      color: var(--color-orange-600);
    }
  }
}
.hover\:underline {
  &:hover {
    @media (hover: hover) {
      text-decoration-line: underline;
    }
  }
}
.hover\:opacity-100 {
  &:hover {
    @media (hover: hover) {
      opacity: 100%;
    }
  }
}
.md\:container {
  @media (width >= 48rem) {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
}
.md\:mx-auto {
  @media (width >= 48rem) {
    margin-inline: auto;
  }
}
.md\:h-\[335px\] {
  @media (width >= 48rem) {
    height: 335px;
  }
}
.md\:h-\[340px\] {
  @media (width >= 48rem) {
    height: 340px;
  }
}
.md\:h-\[435px\] {
  @media (width >= 48rem) {
    height: 435px;
  }
}
.md\:min-h-screen {
  @media (width >= 48rem) {
    min-height: 100vh;
  }
}
.md\:w-1\/3 {
  @media (width >= 48rem) {
    width: calc(1/3 * 100%);
  }
}
.md\:w-2xl {
  @media (width >= 48rem) {
    width: var(--container-2xl);
  }
}
.md\:w-\[35\%\] {
  @media (width >= 48rem) {
    width: 35%;
  }
}
.md\:w-\[65\%\] {
  @media (width >= 48rem) {
    width: 65%;
  }
}
.md\:w-\[235px\] {
  @media (width >= 48rem) {
    width: 235px;
  }
}
.md\:w-fit {
  @media (width >= 48rem) {
    width: -moz-fit-content;
    width: fit-content;
  }
}
.md\:flex-row {
  @media (width >= 48rem) {
    flex-direction: row;
  }
}
.md\:flex-nowrap {
  @media (width >= 48rem) {
    flex-wrap: nowrap;
  }
}
.md\:items-start {
  @media (width >= 48rem) {
    align-items: flex-start;
  }
}
.md\:justify-between {
  @media (width >= 48rem) {
    justify-content: space-between;
  }
}
.md\:self-start {
  @media (width >= 48rem) {
    align-self: flex-start;
  }
}
.md\:hover\:bg-violet-600 {
  @media (width >= 48rem) {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-violet-600);
      }
    }
  }
}
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-orange-600: oklch(64.6% 0.222 41.116);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-violet-500: oklch(60.6% 0.25 292.717);
    --color-violet-600: oklch(54.1% 0.281 293.009);
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-gray-700: oklch(37.3% 0.034 259.733);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-gray-900: oklch(21% 0.034 264.665);
    --color-gray-950: oklch(13% 0.028 261.692);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-sm: 24rem;
    --container-2xl: 42rem;
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --font-weight-bold: 700;
    --font-weight-extrabold: 800;
    --animate-spin: spin 1s linear infinite;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    -moz-tab-size: 4;
      -o-tab-size: 4;
         tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::-moz-placeholder {
    opacity: 1;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::-moz-placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    -webkit-appearance: button;
       -moz-appearance: button;
            appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities;
* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  font-family: sans-serif;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: rotateX(0);
      --tw-rotate-y: rotateY(0);
      --tw-rotate-z: rotateZ(0);
      --tw-skew-x: skewX(0);
      --tw-skew-y: skewY(0);
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-duration: initial;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
    }
  }
}